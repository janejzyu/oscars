lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
N = 10^4
cauchy = rt(N,1)
delta = function(x){
mean(cauchy * exp(- (x-cauchy)^2/2))/mean(exp(-(x-cauchy)^2/2))
}
x = seq(-20, 20, by = 0.1)
plot(x,apply(as.matrix(x),1,delta),type="l",col="red",
xlab="x", ylab=expression(delta(x)), lwd=2,
main = "normal-Cauchy Bayes estimator")
```
x = rnorm(1,0,2)
N = 10^4
fbar = cumsum(cauchy*exp(-(x-cauchy)^2/2))/(1:N)
sigf = (cumsum(cauchy^2*exp(-(x-cauchy)^2))/(1:N)) - fbar^2
gbar = cumsum(exp(-(x-cauchy)^2/2))/(1:N)
sigg = (cumsum(exp(-(x-cauchy)^2))/(1:N)) - gbar^2
glob = sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
plot(fbar/gbar,type="l",xlab="n", ylab = "", yaxt="n",
main = "estimate of mean",
col="sienna3",lwd=2, ylim = c(0.1, 0.9))
lines(fbar/gbar-2*glob,col="sienna3",lty=1)
lines(fbar/gbar+2*glob,col="sienna3",lty=1)
#Normal sample
the=rnorm(N,x)
fbar=cumsum(the/(1+the^2))/(1:N)
sigf=(cumsum(the^2/(1+the^2)^2))/(1:N) - fbar^2
gbar=cumsum(1/(1+the^2))/(1:N)
sigg=(cumsum(1/(1+the^2)^2))/(1:N) - gbar^2
glob=sqrt(((sigf/gbar^2)+(sigg*fbar^2/gbar^4))/(1:N))
lines(fbar/gbar,type="l",xlab="n",
col="steelblue4",lwd=2)
lines(fbar/gbar-2*glob,col="steelblue4",lty=2)
lines(fbar/gbar+2*glob,col="steelblue4",lty=2)
legend("topright",  c("df = 1","df = 5","df = 10"),
lty=c(1,2, 1),
lwd=c(2.5,2.5),col=c("sienna3","steelblue4", "sienna3"))
install.packages(glmmBUGS)
install.packages(glmmBUGS)
install.packages("glmmBUGS")
